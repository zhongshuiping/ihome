flask自带的session 和Session是不一样的,
工厂模式
-------------------------
创建蓝图,注册蓝图
 restful  是设计的风格,是指客户端和服务器的交互形式
 我们需要关注的是如何设计rest风格的网络接口,url
 域名 版本 路径  使用标准的HTTP的方法
 过滤信息  状态码  错误信息  响应结果
 使用相关链接的方法
 -------------------------------
 先判断蓝图api是否注册到app中,
 视图函数的模块是否被导入
 静态文件的处理
 定义一个静态文件的视图,创建蓝图
 自定义路由转化器
 网站标题 的图标
 创建模型
 显示验证码

 生成uuid  拼接请求地址 将url赋值给img标签的src属性
 -----------------------------------------------
 日志
 工厂模式封装日志
 定义一个发送短信的视图
 功能:1.接收参数  手机号 图片验证码 uuid
 判断参数是否缺少
 获取服务器存储的验证码
 验证通过,发送短信给收到的手机号码
 request.data 保存请求报文中的原始字符串
 校燕手机号是否合格

 url
 type
 JSON.stringify(params)
 contentType:'application/json'
 headers:{''}
 success

 from flask_wtf.csrf import csrf
 在到静态页面前,将csrf_token写入cookie
 中
---------------------------------------
用户登陆的接口,先后端后前端
注册接口写用户是否已经注册
个人中心接口文档
提供用户的个人信息,get方法
先判断用户是否登陆,获取用户的id,
查询该登陆用户的user信息
构造响应的数据,构造的数据尽量不放在视图函数中,放在模型类中
使用七牛云存储我们的图片
image_storage图片的存储的类
提供用户上传头像的接口
接口复用
装饰器装饰一个函数时,会修改该函数的__name__
需要导入 wraps(func)
说白了就是装饰很多函数,__name__都是第一个装饰器
用g变量来保存住user_id,方便视图函数直接使用g变量
-----------------------------------
房屋信息
newhouse.html
查询所有的城区信息
构造响应数据,[Area,Area]
把一个字典放到列表中传到前面去
收集form表单需要提交的input标签,放在一个数组的对象中
map 遍历对象  比如数组对象
obj 等于字典数组 {name:'title',value:'1'}
$(this).serializeArray().map(function(obj){
    params[obj.name] = obj.value
})
遍历界面上被选中的nane为facility的checkbox
$(':checkbox:checked[name=facility]').each(function(i,ele){
    console.log(elem)
    list[i] = ele.value
});
发布新房源接口
接收参数 判断是否为空
效验参数  参数类型
实例化房屋模型对象 并赋值
在开发中对于float不要直接存数据  要乘以100 然后转化为int类型
处理房屋的设施 一对多
保存到数据库
响应结果
点击发布新房源后,js要隐藏发布级别信息的表单,显示发布房屋图片的表单
发布房屋图片的接口,房屋图片和房屋是一个一对多的关系,
def update_house_image(): 使用house_id ,如果查询不出来就不上传图片
将图片的七牛云的key,存储到数据库,响应结果,上传的房屋图片,需要立即刷新出来
Art-template模板引擎  js--html
房屋详情的接口 detail.html
def get_house_detail(house_id):
    提供房屋的详情
    查询房屋的全部的信息,
    构造响应的数据
    响应的结果

    即刻预定按钮的显示详情
判断用户是否登陆,主要是index页面的显示
提供最新房源的推荐
---------------------------------------------------------
当我们选中城区的时候,响应成功后,通过js代码给搜索添加属性
在主页面搜索,
当我们点击搜索的时候,就会把城区的的id拼接到url中,
入住时间和结束入住的时间同样

房屋列表页的搜索
房屋列表信息  1.查询出所有的房屋信息  2.构造响应的数据
无条件查询出所有的房屋信息 ,
根据用户的城区信息,刷选出满足条件的房屋信息
无条件从BaseQuery中取出对象中的数据
根据用户选中的城区信息,刷选出满足条件的房屋信息
根据排序的规则对数据进行排序, new  booking price-inc price-des
对房屋进行分页
paginate('页码','每页显示的个数',是否报错)
返回的是一个对象,里面有对象
pagninate.items
pagninate.pages 获取一共有多少页
返回给前面的数据  分页后的house对象  还有house的总页数
在前台是通过下拉进行刷新的,所以current_page默认是第一页,
所以后台不要传当前页
---------------------------------------------------
订单提交 order.py
处理订单的逻辑
接收参数,house_id 入住时间和离开时间
校验参数,判断当前房屋是否被预定
查询订单
客户定单,我的订单和客户订单是同一个接口,限定传的role的参数
